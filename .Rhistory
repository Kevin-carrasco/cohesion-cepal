show.legend = FALSE,
size = 4.5,
color = rep('black'),
bg.colour='white') +
labs(caption = "Fuente: elaboracion propia en base a datos de ELSOC 2016-2020
Nota: El indicador de Cuantas personas se conocen con profesiones distintas solo esta disponible
para los años 2016, 2018 y 2020")
alluvial_lazos
alluvial_lazos <- ggplot(datos.lazos, aes(x = ola, fill = lazos, stratum = lazos,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 0)) +
scale_fill_viridis_d(begin = 0, end = .95, direction = -1, option = 'viridis') +
geom_shadowtext(data = etiquetas.lazos,
aes(label = ifelse(porcentaje > 0.03 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4.5,
color = rep('white'),
bg.colour='gray50') +
labs(caption = "Fuente: elaboracion propia en base a datos de ELSOC 2016-2020
Nota: El indicador de Cuantas personas se conocen con profesiones distintas solo esta disponible
para los años 2016, 2018 y 2020")
alluvial_lazos
alluvial_lazos <- ggplot(datos.lazos, aes(x = ola, fill = lazos, stratum = lazos,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 0)) +
scale_fill_viridis_d(begin = 0, end = .95, direction = -1, option = 'viridis') +
geom_shadowtext(data = etiquetas.lazos,
aes(label = ifelse(porcentaje > 0.03 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4.5,
color = rep('white'),
bg.colour='gray80') +
labs(caption = "Fuente: elaboracion propia en base a datos de ELSOC 2016-2020
Nota: El indicador de Cuantas personas se conocen con profesiones distintas solo esta disponible
para los años 2016, 2018 y 2020")
alluvial_lazos
alluvial_lazos <- ggplot(datos.lazos, aes(x = ola, fill = lazos, stratum = lazos,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 0)) +
scale_fill_viridis_d(begin = 0, end = .95, direction = -1, option = 'viridis') +
geom_shadowtext(data = etiquetas.lazos,
aes(label = ifelse(porcentaje > 0.03 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4.5,
color = rep('white'),
bg.colour='gray100') +
labs(caption = "Fuente: elaboracion propia en base a datos de ELSOC 2016-2020
Nota: El indicador de Cuantas personas se conocen con profesiones distintas solo esta disponible
para los años 2016, 2018 y 2020")
alluvial_lazos
alluvial_lazos <- ggplot(datos.lazos, aes(x = ola, fill = lazos, stratum = lazos,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 0)) +
scale_fill_viridis_d(begin = 0, end = .95, direction = -1, option = 'viridis') +
geom_shadowtext(data = etiquetas.lazos,
aes(label = ifelse(porcentaje > 0.03 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4.5,
color = rep('white'),
bg.colour='gray90') +
labs(caption = "Fuente: elaboracion propia en base a datos de ELSOC 2016-2020
Nota: El indicador de Cuantas personas se conocen con profesiones distintas solo esta disponible
para los años 2016, 2018 y 2020")
alluvial_lazos
alluvial_lazos <- ggplot(datos.lazos, aes(x = ola, fill = lazos, stratum = lazos,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 0)) +
scale_fill_viridis_d(begin = 0, end = .95, direction = -1, option = 'viridis') +
geom_shadowtext(data = etiquetas.lazos,
aes(label = ifelse(porcentaje > 0.03 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4.5,
color = rep('white'),
bg.colour='gray80') +
labs(caption = "Fuente: elaboracion propia en base a datos de ELSOC 2016-2020
Nota: El indicador de Cuantas personas se conocen con profesiones distintas solo esta disponible
para los años 2016, 2018 y 2020")
alluvial_lazos
alluvial_lazos <- ggplot(datos.lazos, aes(x = ola, fill = lazos, stratum = lazos,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 0)) +
scale_fill_viridis_d(begin = 0, end = .95, direction = -1, option = 'viridis') +
geom_shadowtext(data = etiquetas.lazos,
aes(label = ifelse(porcentaje > 0.03 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4.5,
color = rep('white'),
bg.colour='grey30') +
labs(caption = "Fuente: elaboracion propia en base a datos de ELSOC 2016-2020
Nota: El indicador de Cuantas personas se conocen con profesiones distintas solo esta disponible
para los años 2016, 2018 y 2020")
alluvial_lazos
alluvial_lazos <- ggplot(datos.lazos, aes(x = ola, fill = lazos, stratum = lazos,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 0)) +
scale_fill_viridis_d(begin = 0, end = .95, direction = -1, option = 'viridis') +
geom_shadowtext(data = etiquetas.lazos,
aes(label = ifelse(porcentaje > 0.03 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = rep('white'),
bg.colour='grey30') +
labs(caption = "Fuente: elaboracion propia en base a datos de ELSOC 2016-2020
Nota: El indicador de Cuantas personas se conocen con profesiones distintas solo esta disponible
para los años 2016, 2018 y 2020")
alluvial_lazos
ggsave(alluvial_lazos, file = "bookdown-files/output/graphs/alluvial_lazos.png",device = "png",width = 25,height = 13,dpi = "retina",units = "cm")
alluvial_lazos <- ggplot(datos.lazos, aes(x = ola, fill = lazos, stratum = lazos,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 0)) +
scale_fill_viridis_d(begin = 0, end = .95, direction = -1, option = 'viridis') +
geom_shadowtext(data = etiquetas.lazos,
aes(label = ifelse(porcentaje > 0.03 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = rep('white'),
bg.colour='grey40') +
labs(caption = "Fuente: elaboracion propia en base a datos de ELSOC 2016-2020
Nota: El indicador de Cuantas personas se conocen con profesiones distintas solo esta disponible
para los años 2016, 2018 y 2020")
alluvial_lazos
ggsave(alluvial_lazos, file = "bookdown-files/output/graphs/alluvial_lazos.png",device = "png",width = 25,height = 13,dpi = "retina",units = "cm")
alluvial_lazos <- ggplot(datos.lazos, aes(x = ola, fill = lazos, stratum = lazos,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 0)) +
scale_fill_viridis_d(begin = 0, end = .95, direction = -1, option = 'viridis') +
geom_shadowtext(data = etiquetas.lazos,
aes(label = ifelse(porcentaje > 0.03 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 3,
color = rep('white'),
bg.colour='grey40') +
labs(caption = "Fuente: elaboracion propia en base a datos de ELSOC 2016-2020
Nota: El indicador de Cuantas personas se conocen con profesiones distintas solo esta disponible
para los años 2016, 2018 y 2020")
alluvial_lazos
ggsave(alluvial_lazos, file = "bookdown-files/output/graphs/alluvial_lazos.png",device = "png",width = 25,height = 13,dpi = "retina",units = "cm")
# Cargar paquetes
pacman::p_load(dplyr, ggplot2, sf, ggpubr)
# Cargar base de datos
load("input/data/proc/data_clases.RData")
regiones <- readRDS("input/data/original/regiones_nac.rds") # shapefile de regiones
data <- mutate(region = car::recode(data$region_w03, "c(Tarapaca, Antofagasta)=1", "Atacama=2", "Coquimbo = 4"))
table(data$region_w03)
data$region_w03 <- as.numeric(data$region_w03)
table(data$region_w03)
summary(data$region_w03)
# Cargar base de datos
load("input/data/proc/data_clases.RData")
data$region_w03 <- as.numeric(data$region_w03)
# Cargar base de datos
load("input/data/proc/data_clases.RData")
class(data$region_w03)
region_num<- c(2,9,3,11,8,4,6,10,14,7,13,1,5)
data$region_w03 <- region_num
data$region_w03 <- as.numeric(data$region_cod_w03)
table(data$region_cod_w03)
data <- mutate(region = car::recode(data$region_w03, "c(1,2)=1; 3=2; 4=3; 5=4; 6=5; 7=6; 8=7; 9=8, c(10,11,14)=9; 13=10"))
data <- mutate(region = car::recode(data$region_w03, "c(1,2)=1; 3=2; 4=3; 5=4; 6=5; 7=6; 8=7; 9=8; c(10,11,14)=9; 13=10"))
data <- dplyr::mutate(region = car::recode(data$region_w03, "c(1,2)=1; 3=2; 4=3; 5=4; 6=5; 7=6; 8=7; 9=8; c(10,11,14)=9; 13=10"))
data <- dplyr::mutate(region_w03 = car::recode(data$region_w03, "c(1,2)=1; 3=2; 4=3; 5=4; 6=5; 7=6; 8=7; 9=8; c(10,11,14)=9; 13=10"))
data$region <- car::recode(data$region_w03, "c(1,2)=1; 3=2; 4=3; 5=4; 6=5; 7=6; 8=7; 9=8; c(10,11,14)=9; 13=10")
table(data$region)
table(data$region_cod_w03)
table(data$region_w03)
# Cargar base de datos
load("input/data/proc/data_clases.RData")
regiones <- readRDS("input/data/original/regiones_nac.rds") # shapefile de regiones
data$region <- car::recode(data$region_cod_w03, "c(1,2)=1; 3=2; 4=3; 5=4; 6=5; 7=6; 8=7; 9=8; c(10,11,14)=9; 13=10")
data$region
table(data$region_cod_w03)
table(data$region)
# Calcular porcentajes por region
clases <- round(prop.table(table(data$lclass, data$region),2),3)*100
clases <- as.data.frame(clases)
View(clases)
# Se rescata el valor de cada clase (columna)
movilizados <- clases %>% filter(Var1=="Movilizados")
movilizados <- movilizados %>% select(-Var1)
institucionales <- clases %>% filter(Var1=="Institucionales")
institucionales <- institucionales %>% select(-Var1)
atomizados <- clases %>% filter(Var1=="Atomizado")
atomizados <- atomizados %>% select(-Var1)
View(movilizados)
region_num <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
region_num <- 1:16
region_num <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
region_num <- c(1:16)
region_num <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
View(movilizados)
region_num <- as.data.frame(region_num)
View(region_num)
View(region_num)
movilizados$Var2[,1]
movilizados$Var2[2,1]
View(movilizados)
movilizados$Var2[1,1]
movilizados$Var2
movilizados$Freq[1]
region_num <- mutate(Freq = case_when(region_num$region_num == 1 ~ movilizados$Freq[1],
region_num$region_num == 2 ~ movilizados$Freq[1],
region_num$region_num == 3 ~ movilizados$Freq[2],
region_num$region_num == 4 ~ movilizados$Freq[3],
region_num$region_num == 5 ~ movilizados$Freq[4],
region_num$region_num == 6 ~ movilizados$Freq[5],
region_num$region_num == 7 ~ movilizados$Freq[6],
region_num$region_num == 8 ~ movilizados$Freq[7],
region_num$region_num == 9 ~ movilizados$Freq[8],
region_num$region_num == 10 ~ movilizados$Freq[9],
region_num$region_num == 11 ~ movilizados$Freq[9],
region_num$region_num == 12 ~ movilizados$Freq[9],
region_num$region_num == 13 ~ movilizados$Freq[10],
region_num$region_num == 14 ~ movilizados$Freq[9],
region_num$region_num == 15 ~ movilizados$Freq[1],
region_num$region_num == 16 ~ movilizados$Freq[7]))
region_num$Freq <- mutate(Freq = case_when(region_num$region_num == 1 ~ movilizados$Freq[1],
region_num$region_num == 2 ~ movilizados$Freq[1],
region_num$region_num == 3 ~ movilizados$Freq[2],
region_num$region_num == 4 ~ movilizados$Freq[3],
region_num$region_num == 5 ~ movilizados$Freq[4],
region_num$region_num == 6 ~ movilizados$Freq[5],
region_num$region_num == 7 ~ movilizados$Freq[6],
region_num$region_num == 8 ~ movilizados$Freq[7],
region_num$region_num == 9 ~ movilizados$Freq[8],
region_num$region_num == 10 ~ movilizados$Freq[9],
region_num$region_num == 11 ~ movilizados$Freq[9],
region_num$region_num == 12 ~ movilizados$Freq[9],
region_num$region_num == 13 ~ movilizados$Freq[10],
region_num$region_num == 14 ~ movilizados$Freq[9],
region_num$region_num == 15 ~ movilizados$Freq[1],
region_num$region_num == 16 ~ movilizados$Freq[7]))
region_num$Freq <- mutate(Freq = case_when(region_num$region_num == 1 ~ movilizados$Freq[1],
region_num$region_num == 2 ~ movilizados$Freq[1],
region_num$region_num == 3 ~ movilizados$Freq[2],
region_num$region_num == 4 ~ movilizados$Freq[3],
region_num$region_num == 5 ~ movilizados$Freq[4],
region_num$region_num == 6 ~ movilizados$Freq[5],
region_num$region_num == 7 ~ movilizados$Freq[6],
region_num$region_num == 8 ~ movilizados$Freq[7],
region_num$region_num == 9 ~ movilizados$Freq[8],
region_num$region_num == 10 ~ movilizados$Freq[9],
region_num$region_num == 11 ~ movilizados$Freq[9],
region_num$region_num == 12 ~ movilizados$Freq[9],
region_num$region_num == 13 ~ movilizados$Freq[10],
region_num$region_num == 14 ~ movilizados$Freq[9],
region_num$region_num == 15 ~ movilizados$Freq[1],
region_num$region_num == 16 ~ movilizados$Freq[7],
TRUE ~ ""))
region_num <- mutate(Freq = case_when(region_num$region_num == 1 ~ movilizados$Freq[1],
region_num$region_num == 2 ~ movilizados$Freq[1],
region_num$region_num == 3 ~ movilizados$Freq[2],
region_num$region_num == 4 ~ movilizados$Freq[3],
region_num$region_num == 5 ~ movilizados$Freq[4],
region_num$region_num == 6 ~ movilizados$Freq[5],
region_num$region_num == 7 ~ movilizados$Freq[6],
region_num$region_num == 8 ~ movilizados$Freq[7],
region_num$region_num == 9 ~ movilizados$Freq[8],
region_num$region_num == 10 ~ movilizados$Freq[9],
region_num$region_num == 11 ~ movilizados$Freq[9],
region_num$region_num == 12 ~ movilizados$Freq[9],
region_num$region_num == 13 ~ movilizados$Freq[10],
region_num$region_num == 14 ~ movilizados$Freq[9],
region_num$region_num == 15 ~ movilizados$Freq[1],
region_num$region_num == 16 ~ movilizados$Freq[7],
TRUE ~ ""))
names(region_num) <- c("region_num","COHESION")
region_num$Freq <- lenght(1:16)
region_num$Freq <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
View(region_num)
region_num$Freq <- mutate(COHESION = case_when(region_num$region_num == 1 ~ movilizados$Freq[1],
region_num$region_num == 2 ~ movilizados$Freq[1],
region_num$region_num == 3 ~ movilizados$Freq[2],
region_num$region_num == 4 ~ movilizados$Freq[3],
region_num$region_num == 5 ~ movilizados$Freq[4],
region_num$region_num == 6 ~ movilizados$Freq[5],
region_num$region_num == 7 ~ movilizados$Freq[6],
region_num$region_num == 8 ~ movilizados$Freq[7],
region_num$region_num == 9 ~ movilizados$Freq[8],
region_num$region_num == 10 ~ movilizados$Freq[9],
region_num$region_num == 11 ~ movilizados$Freq[9],
region_num$region_num == 12 ~ movilizados$Freq[9],
region_num$region_num == 13 ~ movilizados$Freq[10],
region_num$region_num == 14 ~ movilizados$Freq[9],
region_num$region_num == 15 ~ movilizados$Freq[1],
region_num$region_num == 16 ~ movilizados$Freq[7],
TRUE ~ ""))
region_num$Freq <- case_when(region_num$region_num == 1 ~ movilizados$Freq[1],
region_num$region_num == 2 ~ movilizados$Freq[1],
region_num$region_num == 3 ~ movilizados$Freq[2],
region_num$region_num == 4 ~ movilizados$Freq[3],
region_num$region_num == 5 ~ movilizados$Freq[4],
region_num$region_num == 6 ~ movilizados$Freq[5],
region_num$region_num == 7 ~ movilizados$Freq[6],
region_num$region_num == 8 ~ movilizados$Freq[7],
region_num$region_num == 9 ~ movilizados$Freq[8],
region_num$region_num == 10 ~ movilizados$Freq[9],
region_num$region_num == 11 ~ movilizados$Freq[9],
region_num$region_num == 12 ~ movilizados$Freq[9],
region_num$region_num == 13 ~ movilizados$Freq[10],
region_num$region_num == 14 ~ movilizados$Freq[9],
region_num$region_num == 15 ~ movilizados$Freq[1],
region_num$region_num == 16 ~ movilizados$Freq[7],
TRUE ~ "")
region_num$Freq <- if_else(region_num$region_num == 1,
movilizados$Freq[1],
if_else(region_num$region_num == 2,
movilizados$Freq[1],
if_else(region_num$region_num == 3,
movilizados$Freq[2],
if_else(region_num$region_num == 4, movilizados$Freq[3],
if_else(region_num$region_num == 5, movilizados$Freq[4],
if_else(region_num$region_num == 6, movilizados$Freq[5],
if_else(region_num$region_num == 7, movilizados$Freq[6],
if_else(region_num$region_num == 8, movilizados$Freq[7],
if_else(region_num$region_num == 9, movilizados$Freq[8],
if_else(region_num$region_num == 10, movilizados$Freq[9],
if_else(region_num$region_num == 11, movilizados$Freq[9],
if_else(region_num$region_num == 12, movilizados$Freq[9],
if_else(region_num$region_num == 13, movilizados$Freq[10],
if_else(region_num$region_num == 14, movilizados$Freq[9],
if_else(region_num$region_num == 15, movilizados$Freq[1],
if_else(region_num$region_num == 16, movilizados$Freq[7], NA))))))))))))))))
region_num$Freq <- if_else((region_num$region_num == 1), movilizados$Freq[1],
if_else((region_num$region_num == 2), movilizados$Freq[1],
if_else((region_num$region_num == 3), movilizados$Freq[2],
if_else((region_num$region_num == 4), movilizados$Freq[3],
if_else((region_num$region_num) == 5, movilizados$Freq[4],
if_else((region_num$region_num) == 6, movilizados$Freq[5],
if_else((region_num$region_num) == 7, movilizados$Freq[6],
if_else((region_num$region_num) == 8, movilizados$Freq[7],
if_else((region_num$region_num) == 9, movilizados$Freq[8],
if_else((region_num$region_num) == 10, movilizados$Freq[9],
if_else((region_num$region_num) == 11, movilizados$Freq[9],
if_else((region_num$region_num) == 12, movilizados$Freq[9],
if_else((region_num$region_num == 13), movilizados$Freq[10],
if_else((region_num$region_num == 14), movilizados$Freq[9],
if_else((region_num$region_num) == 15, movilizados$Freq[1],
if_else((region_num$region_num == 16), movilizados$Freq[7], NA))))))))))))))))
region_num$region_num <- 1:16
region_num$Freq <- if_else((region_num$region_num == 1), movilizados$Freq[1],
if_else((region_num$region_num == 2), movilizados$Freq[1],
if_else((region_num$region_num == 3), movilizados$Freq[2],
if_else((region_num$region_num == 4), movilizados$Freq[3],
if_else((region_num$region_num) == 5, movilizados$Freq[4],
if_else((region_num$region_num) == 6, movilizados$Freq[5],
if_else((region_num$region_num) == 7, movilizados$Freq[6],
if_else((region_num$region_num) == 8, movilizados$Freq[7],
if_else((region_num$region_num) == 9, movilizados$Freq[8],
if_else((region_num$region_num) == 10, movilizados$Freq[9],
if_else((region_num$region_num) == 11, movilizados$Freq[9],
if_else((region_num$region_num) == 12, movilizados$Freq[9],
if_else((region_num$region_num == 13), movilizados$Freq[10],
if_else((region_num$region_num == 14), movilizados$Freq[9],
if_else((region_num$region_num) == 15, movilizados$Freq[1],
if_else((region_num$region_num == 16), movilizados$Freq[7], NA))))))))))))))))
region_num$Freq <- ifelse((region_num$region_num == 1), movilizados$Freq[1],
ifelse((region_num$region_num == 2), movilizados$Freq[1],
ifelse((region_num$region_num == 3), movilizados$Freq[2],
ifelse((region_num$region_num == 4), movilizados$Freq[3],
ifelse((region_num$region_num) == 5, movilizados$Freq[4],
ifelse((region_num$region_num) == 6, movilizados$Freq[5],
ifelse((region_num$region_num) == 7, movilizados$Freq[6],
ifelse((region_num$region_num) == 8, movilizados$Freq[7],
ifelse((region_num$region_num) == 9, movilizados$Freq[8],
ifelse((region_num$region_num) == 10, movilizados$Freq[9],
ifelse((region_num$region_num) == 11, movilizados$Freq[9],
ifelse((region_num$region_num) == 12, movilizados$Freq[9],
ifelse((region_num$region_num == 13), movilizados$Freq[10],
ifelse((region_num$region_num == 14), movilizados$Freq[9],
ifelse((region_num$region_num) == 15, movilizados$Freq[1],
ifelse((region_num$region_num == 16), movilizados$Freq[7], NA))))))))))))))))
View(region_num)
# Cargar base de datos
load("input/data/proc/data_clases.RData")
data$region <- car::recode(data$region_cod_w03, "c(1,2)=1; 3=2; 4=3; 5=4; 6=5; 7=6; 8=7; 9=8; c(10,11,14)=9; 13=10")
# Calcular porcentajes por region
clases <- round(prop.table(table(data$lclass, data$region),2),3)*100
clases <- as.data.frame(clases)
# Se rescata el valor de cada clase (columna)
movilizados <- clases %>% filter(Var1=="Movilizados")
movilizados <- movilizados %>% select(-Var1)
institucionales <- clases %>% filter(Var1=="Institucionales")
institucionales <- institucionales %>% select(-Var1)
atomizados <- clases %>% filter(Var1=="Atomizado")
atomizados <- atomizados %>% select(-Var1)
region_num <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
region_num <- as.data.frame(region_num)
region_num$Freq <- ifelse((region_num$region_num == 1), movilizados$Freq[1],
ifelse((region_num$region_num == 2), movilizados$Freq[1],
ifelse((region_num$region_num == 3), movilizados$Freq[2],
ifelse((region_num$region_num == 4), movilizados$Freq[3],
ifelse((region_num$region_num) == 5, movilizados$Freq[4],
ifelse((region_num$region_num) == 6, movilizados$Freq[5],
ifelse((region_num$region_num) == 7, movilizados$Freq[6],
ifelse((region_num$region_num) == 8, movilizados$Freq[7],
ifelse((region_num$region_num) == 9, movilizados$Freq[8],
ifelse((region_num$region_num) == 10, movilizados$Freq[9],
ifelse((region_num$region_num) == 11, movilizados$Freq[9],
ifelse((region_num$region_num) == 12, movilizados$Freq[9],
ifelse((region_num$region_num == 13), movilizados$Freq[10],
ifelse((region_num$region_num == 14), movilizados$Freq[9],
ifelse((region_num$region_num) == 15, movilizados$Freq[1],
ifelse((region_num$region_num == 16), movilizados$Freq[7], NA))))))))))))))))
View(region_num)
# Aqui poner condicional, para repetir los niveles de cohesion por las regiones contiguas.
zona_movilizados <- c(1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16)
zona_movilizados <- as.data.frame(zona_movilizados)
zona_movilizados$Freq <- ifelse((region_num$region_num == 1), movilizados$Freq[1],
ifelse((region_num$region_num == 2), movilizados$Freq[1],
ifelse((region_num$region_num == 3), movilizados$Freq[2],
ifelse((region_num$region_num == 4), movilizados$Freq[3],
ifelse((region_num$region_num) == 5, movilizados$Freq[4],
ifelse((region_num$region_num) == 6, movilizados$Freq[5],
ifelse((region_num$region_num) == 7, movilizados$Freq[6],
ifelse((region_num$region_num) == 8, movilizados$Freq[7],
ifelse((region_num$region_num) == 9, movilizados$Freq[8],
ifelse((region_num$region_num) == 10, movilizados$Freq[9],
ifelse((region_num$region_num) == 11, movilizados$Freq[9],
ifelse((region_num$region_num) == 12, movilizados$Freq[9],
ifelse((region_num$region_num == 13), movilizados$Freq[10],
ifelse((region_num$region_num == 14), movilizados$Freq[9],
ifelse((region_num$region_num) == 15, movilizados$Freq[1],
ifelse((region_num$region_num == 16), movilizados$Freq[7], NA))))))))))))))))
View(zona_movilizados)
names(zona_movilizados) <- c("REGION","COHESION")
regiones_mov <- sp::merge(regiones,zona_movilizados,by = "REGION")
regiones <- readRDS("input/data/original/regiones_nac.rds") # shapefile de regiones
regiones_mov <- sp::merge(regiones,zona_movilizados,by = "REGION")
regiones_mov <- st_as_sf(regiones_mov)
mapa_movilizados <- ggplot(data = regiones_mov) +
geom_sf() +
geom_sf(data = regiones_mov, aes(fill = regiones_mov$COHESION)) +
scale_fill_distiller(palette = "Blues", trans = "reverse") +
labs(fill="Porcentaje de
movilizados") +
coord_sf(xlim  = c(-80 , -65), ylim  = c(-60, -15)) +
theme_void()
mapa_movilizados
View(institucionales)
View(atomizados)
